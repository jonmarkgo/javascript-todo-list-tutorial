{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://TodoApp/./lib/elmish.ts","webpack://TodoApp/webpack/bootstrap","webpack://TodoApp/./lib/todo-app.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.empty = empty;\nexports.mount = mount;\nexports.add_attributes = add_attributes;\nexports.append_childnodes = append_childnodes;\nexports.create_element = create_element;\nexports.section = section;\nexports.a = a;\nexports.button = button;\nexports.div = div;\nexports.footer = footer;\nexports.header = header;\nexports.h1 = h1;\nexports.input = input;\nexports.label = label;\nexports.li = li;\nexports.span = span;\nexports.strong = strong;\nexports.text = text;\nexports.ul = ul;\nexports.route = route;\nfunction empty(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\nfunction mount(model, update, view, root_element_id, subscriptions) {\n    console.log(`[MOUNT] Mounting app with root element id: ${root_element_id}`);\n    const ROOT = document.getElementById(root_element_id);\n    if (!ROOT) {\n        console.error(`[MOUNT] Element with id \"${root_element_id}\" not found`);\n        throw new Error(`Element with id \"${root_element_id}\" not found`);\n    }\n    const store_name = 'todos-elmish_' + root_element_id;\n    console.log(`[MOUNT] Using localStorage key: ${store_name}`);\n    function saveModelToLocalStorage(mod) {\n        try {\n            const serializedModel = JSON.stringify(mod);\n            localStorage.setItem(store_name, serializedModel);\n            console.log('[SAVE] Model successfully saved to localStorage:', mod);\n        }\n        catch (e) {\n            console.error(`[SAVE] Error saving model to localStorage (${store_name}):`, e);\n        }\n    }\n    function getModelFromLocalStorage() {\n        try {\n            if (typeof localStorage === 'undefined') {\n                console.warn('[GET] localStorage is not available');\n                return null;\n            }\n            const storedModel = localStorage.getItem(store_name);\n            if (storedModel === null) {\n                console.log(`[GET] No stored model found for ${store_name}`);\n                return null;\n            }\n            const parsedModel = JSON.parse(storedModel);\n            console.log('[GET] Retrieved stored model:', parsedModel);\n            return parsedModel;\n        }\n        catch (e) {\n            console.error(`[GET] Error retrieving or parsing model from localStorage (${store_name}):`, e);\n            return null;\n        }\n    }\n    function render(mod, sig, root, callback) {\n        console.log('[RENDER] Rendering view with model:', mod);\n        empty(root);\n        const viewResult = view(mod, sig);\n        console.log('[RENDER] View function result:', viewResult);\n        root.appendChild(viewResult);\n        console.log('[RENDER] View rendered and appended to root');\n        saveModelToLocalStorage(mod);\n        if (callback) {\n            console.log('[RENDER] Scheduling callback');\n            setTimeout(() => {\n                console.log('[RENDER] Executing callback');\n                callback();\n            }, 0);\n        }\n    }\n    let currentModel;\n    function signal(action, data) {\n        return function callback() {\n            console.log(`[SIGNAL] Signal called with action: ${action}, data:`, data);\n            console.log('[SIGNAL] Current model before update:', currentModel);\n            try {\n                const updatedModel = update(action, currentModel, data);\n                console.log('[SIGNAL] Model updated:', updatedModel);\n                if (ROOT) {\n                    currentModel = updatedModel;\n                    render(currentModel, signal, ROOT, () => {\n                        console.log('[RENDER] DOM updated after action:', action);\n                        console.log('[RENDER] Current model after update:', currentModel);\n                        saveModelToLocalStorage(currentModel);\n                    });\n                }\n                else {\n                    console.error('[SIGNAL] Root element is null, cannot render view');\n                }\n            }\n            catch (e) {\n                console.error(`[SIGNAL] Error updating model for action: ${action}`, e);\n            }\n        };\n    }\n    // Initialize the model\n    const storedModel = getModelFromLocalStorage();\n    if (storedModel !== null) {\n        console.log('[INIT] Using stored model from localStorage:', storedModel);\n        currentModel = storedModel;\n    }\n    else {\n        console.log(`[INIT] Using provided initial model:`, model);\n        currentModel = model;\n    }\n    try {\n        console.log('[INIT] Initial render with model:', currentModel);\n        render(currentModel, signal, ROOT);\n        if (subscriptions && typeof subscriptions === 'function') {\n            console.log('[INIT] Initializing subscriptions');\n            subscriptions(signal);\n        }\n        else {\n            console.log('[INIT] No subscriptions provided');\n        }\n    }\n    catch (e) {\n        console.error('[ERROR] Error during mount process:', e);\n        // Implement a basic fallback rendering\n        ROOT.innerHTML = '<p>An error occurred while mounting the application.</p>';\n        throw e; // Re-throw the error after fallback rendering\n    }\n    console.log('[MOUNT] Mount process completed, returning signal function');\n    return signal; // Return the signal function\n}\nfunction add_attributes(attrlist, node) {\n    console.log('[ADD_ATTRIBUTES] Processing attributes for node:', node.tagName);\n    console.log('[ADD_ATTRIBUTES] Attribute list:', JSON.stringify(attrlist));\n    if (!attrlist || !Array.isArray(attrlist)) {\n        console.warn('[ADD_ATTRIBUTES] Invalid attribute list, skipping attribute processing');\n        return node;\n    }\n    function isValidAttributeName(name) {\n        if (!name || typeof name !== 'string') {\n            console.warn(`[ADD_ATTRIBUTES] Invalid attribute name: ${name}, type: ${typeof name}`);\n            return false;\n        }\n        const trimmedName = name.trim().toLowerCase();\n        if (trimmedName === '') {\n            console.warn(`[ADD_ATTRIBUTES] Empty attribute name after trimming`);\n            return false;\n        }\n        const validNameRegex = /^[a-z][a-z0-9\\-_:]*$/i;\n        const isValid = validNameRegex.test(trimmedName);\n        if (!isValid) {\n            console.warn(`[ADD_ATTRIBUTES] Invalid attribute name: \"${trimmedName}\", does not match regex: ${validNameRegex}`);\n        }\n        else {\n            console.log(`[ADD_ATTRIBUTES] Valid attribute name: \"${trimmedName}\"`);\n        }\n        return isValid;\n    }\n    function safeSetAttribute(node, key, value) {\n        console.log(`[ADD_ATTRIBUTES] Attempting to set attribute: key=\"${key}\", value=\"${value}\"`);\n        const trimmedKey = key.trim().toLowerCase();\n        const trimmedValue = String(value).trim();\n        if (!trimmedKey || !isValidAttributeName(trimmedKey)) {\n            console.warn(`[ADD_ATTRIBUTES] Invalid attribute name: \"${trimmedKey}\", skipping`);\n            return;\n        }\n        const booleanAttributes = ['checked', 'selected', 'disabled', 'readonly', 'multiple', 'ismap', 'defer', 'autofocus', 'required', 'hidden'];\n        if (booleanAttributes.includes(trimmedKey)) {\n            console.log(`[ADD_ATTRIBUTES] Handling boolean attribute: ${trimmedKey}`);\n            if (trimmedValue === 'true' || trimmedValue === '') {\n                node.setAttribute(trimmedKey, '');\n            }\n            else {\n                node.removeAttribute(trimmedKey);\n            }\n            console.log(`[ADD_ATTRIBUTES] Boolean attribute ${trimmedKey} set to ${trimmedValue === 'true' || trimmedValue === ''}`);\n            return;\n        }\n        if (trimmedValue === '') {\n            if (['class', 'id', 'name', 'value'].includes(trimmedKey)) {\n                console.log(`[ADD_ATTRIBUTES] Setting empty value for essential attribute \"${trimmedKey}\"`);\n            }\n            else {\n                console.warn(`[ADD_ATTRIBUTES] Empty value for non-essential attribute \"${trimmedKey}\", skipping`);\n                return;\n            }\n        }\n        try {\n            console.log(`[ADD_ATTRIBUTES] Setting attribute: node=${node.tagName}, key=\"${trimmedKey}\", value=\"${trimmedValue}\"`);\n            if (trimmedKey === 'class') {\n                node.className = trimmedValue;\n            }\n            else if (trimmedKey === 'style') {\n                node.style.cssText = trimmedValue;\n            }\n            else {\n                node.setAttribute(trimmedKey, trimmedValue);\n            }\n            console.log(`[ADD_ATTRIBUTES] Successfully set attribute: ${trimmedKey}=\"${trimmedValue}\"`);\n        }\n        catch (error) {\n            console.error(`[ADD_ATTRIBUTES] Error setting attribute ${trimmedKey}:`, error);\n            if (error instanceof DOMException) {\n                console.error(`[ADD_ATTRIBUTES] DOMException: ${error.message}`);\n            }\n            else {\n                console.error(`[ADD_ATTRIBUTES] Unexpected error:`, error);\n            }\n            console.error(`[ADD_ATTRIBUTES] Failed attribute details: node=${node.tagName}, key=\"${trimmedKey}\", value=\"${trimmedValue}\"`);\n        }\n    }\n    function parseAttribute(attr) {\n        console.log('[ADD_ATTRIBUTES] Parsing attribute:', typeof attr === 'function' ? 'Function' : attr);\n        if (typeof attr === 'function') {\n            console.log('[ADD_ATTRIBUTES] Attribute is a function, treating as event handler');\n            return { key: 'event', value: attr };\n        }\n        if (typeof attr !== 'string') {\n            console.warn('[ADD_ATTRIBUTES] Invalid attribute type:', typeof attr);\n            return null;\n        }\n        const trimmedAttr = attr.trim();\n        if (!trimmedAttr) {\n            console.warn('[ADD_ATTRIBUTES] Empty attribute string after trimming, skipping');\n            return null;\n        }\n        const equalIndex = trimmedAttr.indexOf('=');\n        if (equalIndex === -1) {\n            // Handle boolean attributes without values\n            const key = trimmedAttr.toLowerCase();\n            if (!isValidAttributeName(key)) {\n                console.warn(`[ADD_ATTRIBUTES] Invalid boolean attribute name: \"${key}\", skipping. Full attribute: \"${attr}\"`);\n                return null;\n            }\n            console.log(`[ADD_ATTRIBUTES] Parsed boolean attribute - key: \"${key}\"`);\n            return { key, value: '' }; // Set value to empty string for boolean attributes\n        }\n        const key = trimmedAttr.slice(0, equalIndex).trim().toLowerCase();\n        const value = trimmedAttr.slice(equalIndex + 1).trim();\n        if (!key) {\n            console.warn(`[ADD_ATTRIBUTES] Empty attribute name after trimming, skipping. Full attribute: \"${attr}\"`);\n            return null;\n        }\n        if (!isValidAttributeName(key)) {\n            console.warn(`[ADD_ATTRIBUTES] Invalid attribute name: \"${key}\", skipping. Full attribute: \"${attr}\"`);\n            return null;\n        }\n        if (value === '' && !['class', 'id', 'name'].includes(key)) {\n            console.warn(`[ADD_ATTRIBUTES] Empty attribute value for non-essential attribute: \"${key}\", skipping. Full attribute: \"${attr}\"`);\n            return null;\n        }\n        console.log(`[ADD_ATTRIBUTES] Parsed attribute - key: \"${key}\", value: \"${value}\"`);\n        return { key, value };\n    }\n    function setEventHandler(node, eventName, handlerValue) {\n        console.log(`[ADD_ATTRIBUTES] Setting event handler for ${eventName}`);\n        const eventHandler = typeof handlerValue === 'function'\n            ? handlerValue\n            : (event) => {\n                try {\n                    const functionBody = handlerValue.toString().replace(/^function\\s*\\([^)]*\\)\\s*{/, '').replace(/}$/, '').trim();\n                    if (functionBody) {\n                        new Function('event', functionBody)(event);\n                    }\n                    else {\n                        console.warn(`[ADD_ATTRIBUTES] Empty event handler for ${eventName}, skipping`);\n                    }\n                }\n                catch (error) {\n                    console.error('[ADD_ATTRIBUTES] Error in event handler execution:', error);\n                }\n            };\n        node.addEventListener(eventName, eventHandler);\n        console.log(`[ADD_ATTRIBUTES] Successfully set event handler for ${eventName}`);\n    }\n    try {\n        const parsedAttributes = attrlist\n            .map(parseAttribute)\n            .filter((attr) => attr !== null && attr.key !== '');\n        console.log('[ADD_ATTRIBUTES] Parsed attributes:', parsedAttributes);\n        parsedAttributes.forEach((attr, index) => {\n            var _a, _b;\n            console.log(`[ADD_ATTRIBUTES] Processing attribute ${index + 1}/${parsedAttributes.length}:`, attr);\n            try {\n                if (attr.key === 'event' || attr.key.startsWith('on')) {\n                    console.log('[ADD_ATTRIBUTES] Processing event handler');\n                    const eventName = attr.key === 'event' ? 'click' : attr.key.slice(2);\n                    setEventHandler(node, eventName, attr.value);\n                }\n                else {\n                    const attributeValue = (_b = (_a = attr.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '';\n                    safeSetAttribute(node, attr.key, attributeValue);\n                }\n            }\n            catch (error) {\n                console.error(`[ADD_ATTRIBUTES] Error processing attribute ${attr.key}:`, error);\n                if (error instanceof DOMException) {\n                    console.error(`[ADD_ATTRIBUTES] DOMException: ${error.message}`);\n                }\n                else {\n                    console.error(`[ADD_ATTRIBUTES] Unexpected error:`, error);\n                }\n            }\n        });\n        console.log('[ADD_ATTRIBUTES] Finished processing attributes for node:', node.tagName);\n    }\n    catch (error) {\n        console.error('[ADD_ATTRIBUTES] Unexpected error in add_attributes function:', error);\n    }\n    return node;\n}\n/**\n * `append_childnodes` appends an array of HTML elements to a parent DOM node.\n * @param  {Array.<Node>} childnodes array of child DOM nodes.\n * @param  {Node} parent the \"parent\" DOM node where children will be added.\n * @return {Node} returns parent DOM node with appended children\n * @example\n * // returns the parent node with the \"children\" appended\n * var parent = elmish.append_childnodes([div, p, section], parent);\n */\nfunction append_childnodes(childnodes, parent) {\n    if (childnodes && Array.isArray(childnodes) && childnodes.length > 0) {\n        childnodes.forEach((el) => { parent.appendChild(el); });\n    }\n    return parent;\n}\n/**\n * create_element is a \"helper\" function to \"DRY\" HTML element creation code\n * create *any* element with attributes and childnodes.\n * @param {string} type of element to be created e.g: 'div', 'section'\n * @param {Array<string>} attrlist list of attributes to be applied to the node\n * @param {Array<Node>} childnodes array of child DOM nodes.\n * @return {HTMLElement} returns the DOM node with appended children\n * @example\n * // returns the parent node with the \"children\" appended\n * var div = elmish.create_element('div', [\"class=todoapp\"], [h1, input]);\n */\nfunction create_element(type, attrlist, childnodes) {\n    console.log(`[CREATE_ELEMENT] Creating ${type} element`);\n    console.log(`[CREATE_ELEMENT] Attributes:`, attrlist);\n    console.log(`[CREATE_ELEMENT] Number of child nodes:`, childnodes.length);\n    const element = document.createElement(type);\n    const elementWithAttributes = add_attributes(attrlist, element);\n    const finalElement = append_childnodes(childnodes, elementWithAttributes);\n    console.log(`[CREATE_ELEMENT] Element created:`, finalElement);\n    return finalElement;\n}\nfunction section(attrlist, childnodes) {\n    console.log('[SECTION] Creating section with attributes:', attrlist);\n    return create_element('section', attrlist, childnodes);\n}\nfunction a(attrlist, childnodes) {\n    console.log('[A] Creating anchor with attributes:', attrlist);\n    return create_element('a', attrlist, childnodes);\n}\nfunction button(attrlist, childnodes) {\n    console.log('[BUTTON] Creating button with attributes:', attrlist);\n    return create_element('button', attrlist, childnodes);\n}\nfunction div(attrlist, childnodes) {\n    console.log('[DIV] Creating div with attributes:', attrlist);\n    return create_element('div', attrlist, childnodes);\n}\nfunction footer(attrlist, childnodes) {\n    console.log('[FOOTER] Creating footer with attributes:', attrlist);\n    return create_element('footer', attrlist, childnodes);\n}\nfunction header(attrlist, childnodes) {\n    console.log('[HEADER] Creating header with attributes:', attrlist);\n    return create_element('header', attrlist, childnodes);\n}\nfunction h1(attrlist, childnodes) {\n    console.log('[H1] Creating h1 with attributes:', attrlist);\n    return create_element('h1', attrlist, childnodes);\n}\nfunction input(attrlist, childnodes) {\n    console.log('[INPUT] Creating input with attributes:', attrlist);\n    return create_element('input', attrlist, childnodes);\n}\nfunction label(attrlist, childnodes) {\n    console.log('[LABEL] Creating label with attributes:', attrlist);\n    return create_element('label', attrlist, childnodes);\n}\nfunction li(attrlist, childnodes) {\n    console.log('[LI] Creating li with attributes:', attrlist);\n    return create_element('li', attrlist, childnodes);\n}\nfunction span(attrlist, childnodes) {\n    return create_element('span', attrlist, childnodes);\n}\nfunction strong(text_str) {\n    const el = document.createElement(\"strong\");\n    el.innerHTML = text_str;\n    return el;\n}\nfunction text(text) {\n    return document.createTextNode(text);\n}\nfunction ul(attrlist, childnodes) {\n    return create_element('ul', attrlist, childnodes);\n}\n/**\n * route sets the hash portion of the URL in a web browser.\n * @param {Object} model - the current state of the application.\n * @param {String} title - the title of the \"page\" being navigated to\n * @param {String} hash - the hash (URL) to be navigated to.\n * @return {Object} new_state - state with hash updated to the *new* hash.\n * @example\n * // returns the state object with updated hash value:\n * var new_state = elmish.route(model, 'Active', '#/active');\n */\nfunction route(model, title, hash) {\n    window.location.hash = hash;\n    const new_state = JSON.parse(JSON.stringify(model)); // clone model\n    new_state.hash = hash;\n    return new_state;\n}\n/* module.exports is needed to run the functions using Node.js for testing! */\n/* istanbul ignore next */\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = {\n        add_attributes,\n        append_childnodes,\n        a,\n        button,\n        div,\n        empty,\n        footer,\n        input,\n        h1,\n        header,\n        label,\n        li,\n        mount,\n        route,\n        section,\n        span,\n        strong,\n        text,\n        ul\n    };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mount = exports.initial_model = void 0;\nexports.update = update;\nexports.view = view;\nexports.subscriptions = subscriptions;\nexports.render_item = render_item;\nexports.render_main = render_main;\nexports.render_footer = render_footer;\nconst elmish_1 = require(\"./elmish\");\nObject.defineProperty(exports, \"mount\", { enumerable: true, get: function () { return elmish_1.mount; } });\nconst initial_model = {\n    todos: [],\n    hash: \"#/\",\n    all_done: false\n};\nexports.initial_model = initial_model;\n/**\n * `update` transforms the `model` based on the `action`.\n * @param {string} action - the desired action to perform on the model.\n * @param {Model} model - the App's (current) model (or \"state\").\n * @param {any} data - the data we want to \"apply\" to the item.\n * @return {Model} new_model - the transformed model.\n */\nfunction update(action, model, data) {\n    const new_model = JSON.parse(JSON.stringify(model)); // \"clone\" the model\n    switch (action) {\n        case 'ADD':\n            const last = (model.todos.length > 0) ? model.todos[model.todos.length - 1] : null;\n            const id = last ? last.id + 1 : 1;\n            const input = document.getElementById('new-todo');\n            new_model.todos.push({\n                id: id,\n                title: data || input.value.trim(),\n                done: false\n            });\n            break;\n        case 'TOGGLE':\n            new_model.todos = new_model.todos.map(item => item.id === data ? Object.assign(Object.assign({}, item), { done: !item.done }) : item);\n            new_model.all_done = new_model.todos.every(item => item.done);\n            break;\n        case 'TOGGLE_ALL':\n            new_model.all_done = !new_model.all_done;\n            new_model.todos = new_model.todos.map(item => (Object.assign(Object.assign({}, item), { done: new_model.all_done })));\n            break;\n        case 'DELETE':\n            new_model.todos = new_model.todos.filter(item => item.id !== data);\n            break;\n        case 'EDIT':\n            if (new_model.clicked === data && Date.now() - (new_model.click_time || 0) < 300) {\n                new_model.editing = data;\n            }\n            else {\n                new_model.clicked = data;\n                new_model.click_time = Date.now();\n                new_model.editing = undefined;\n            }\n            break;\n        case 'SAVE':\n            const edit = document.getElementsByClassName('edit')[0];\n            const value = edit.value;\n            const editId = parseInt(edit.id, 10);\n            new_model.clicked = undefined;\n            new_model.editing = undefined;\n            if (!value || value.length === 0) {\n                return update('DELETE', new_model, editId);\n            }\n            new_model.todos = new_model.todos.map(item => item.id === editId ? Object.assign(Object.assign({}, item), { title: value.trim() }) : item);\n            break;\n        case 'CANCEL':\n            new_model.clicked = undefined;\n            new_model.editing = undefined;\n            break;\n        case 'CLEAR_COMPLETED':\n            new_model.todos = new_model.todos.filter(item => !item.done);\n            break;\n        case 'ROUTE':\n            new_model.hash = window.location.hash;\n            break;\n        default:\n            return model;\n    }\n    return new_model;\n}\n/**\n * `render_item` creates a DOM \"tree\" with a single Todo List Item\n * using the \"elmish\" DOM functions (`li`, `div`, `input`, `label` and `button`)\n * returns an `<li>` HTML element with a nested `<div>` which in turn has the:\n * + `<input type=checkbox>` which lets users \"Toggle\" the status of the item\n * + `<label>` which displays the Todo item text (`title`) in a `<text>` node\n * + `<button class=\"destroy\">` lets people \"delete\" a todo item.\n * see: https://github.com/dwyl/learn-elm-architecture-in-javascript/issues/52\n * @param  {Todo} item the todo item object\n * @param {Model} model - the App's (current) model (or \"state\").\n * @param {(action: string, data?: any) => () => void} signal - the Elm Architecture \"dispatcher\" which will run\n * @return {HTMLElement} <li> DOM Tree which is nested in the <ul>.\n * @example\n * // returns <li> DOM element with <div>, <input>. <label> & <button> nested\n * var DOM = render_item({id: 1, title: \"Build Todo List App\", done: false}, model, signal);\n */\nfunction render_item(item, model, signal) {\n    console.log('[RENDER_ITEM] Rendering item:', JSON.stringify(item));\n    if (!item || typeof item !== 'object') {\n        console.error('[RENDER_ITEM] Invalid item:', item);\n        return document.createElement('li'); // Return empty li to avoid errors\n    }\n    const filterAttributes = (attrs) => {\n        console.log('[FILTER_ATTRIBUTES] Input attributes:', attrs);\n        const filtered = attrs.filter((attr) => {\n            if (typeof attr !== 'string') {\n                console.log('[FILTER_ATTRIBUTES] Filtering out non-string attribute:', attr);\n                return false;\n            }\n            const [key, ...valueParts] = attr.split('=');\n            const value = valueParts.join('=');\n            const trimmedKey = key.trim().toLowerCase();\n            const trimmedValue = value.trim();\n            console.log(`[FILTER_ATTRIBUTES] Processing attribute - Key: \"${trimmedKey}\", Value: \"${trimmedValue}\"`);\n            const isValidKey = /^[a-z][a-z0-9\\-_:]*$/.test(trimmedKey);\n            if (!isValidKey) {\n                console.log(`[FILTER_ATTRIBUTES] Invalid key format: \"${trimmedKey}\"`);\n            }\n            const isValidValue = trimmedValue !== '' || ['class', 'id', 'name'].includes(trimmedKey);\n            if (!isValidValue) {\n                console.log(`[FILTER_ATTRIBUTES] Invalid value for key \"${trimmedKey}\": \"${trimmedValue}\"`);\n            }\n            const isValid = trimmedKey !== '' && isValidKey && isValidValue;\n            if (isValid) {\n                console.log(`[FILTER_ATTRIBUTES] Valid attribute: key=\"${trimmedKey}\", value=\"${trimmedValue}\"`);\n            }\n            else {\n                console.log(`[FILTER_ATTRIBUTES] Filtering out invalid attribute: key=\"${trimmedKey}\", value=\"${trimmedValue}\"`);\n            }\n            return isValid;\n        });\n        console.log('[FILTER_ATTRIBUTES] Filtered attributes:', filtered);\n        return filtered;\n    };\n    const liAttributes = filterAttributes([\n        `data-id=${item.id}`,\n        `id=${item.id}`,\n        item.done ? \"class=completed\" : \"\",\n        model && model.editing === item.id ? \"class=editing\" : \"\"\n    ].filter(Boolean));\n    const inputAttributes = filterAttributes([\n        \"class=toggle\",\n        \"type=checkbox\",\n        item.done ? \"checked=true\" : \"\"\n    ].filter(Boolean));\n    console.log('[RENDER_ITEM] Filtered attributes:', {\n        li: liAttributes,\n        input: inputAttributes\n    });\n    const createElementWithLogging = (elementType, attributes, children) => {\n        console.log(`[CREATE_ELEMENT] Creating ${elementType} with attributes:`, attributes);\n        const element = elementType === 'li' ? (0, elmish_1.li)(attributes, children) :\n            elementType === 'div' ? (0, elmish_1.div)(attributes, children) :\n                elementType === 'input' ? (0, elmish_1.input)(attributes, children) :\n                    elementType === 'label' ? (0, elmish_1.label)(attributes, children) :\n                        elementType === 'button' ? (0, elmish_1.button)(attributes, children) :\n                            document.createElement(elementType);\n        console.log(`[CREATE_ELEMENT] Created ${elementType}:`, element);\n        return element;\n    };\n    const liElement = createElementWithLogging('li', liAttributes.filter(Boolean), [\n        createElementWithLogging('div', [\"class=view\"], [\n            createElementWithLogging('input', inputAttributes.filter(Boolean), []),\n            createElementWithLogging('label', [], [(0, elmish_1.text)(item.title || '')]),\n            createElementWithLogging('button', [\"class=destroy\"], [])\n        ]),\n        ...(model && model.editing === item.id ? [\n            createElementWithLogging('input', filterAttributes([\"class=edit\", `id=${item.id}`, `value=${item.title || ''}`, \"autofocus\"]).filter(Boolean), [])\n        ] : [])\n    ]);\n    // Attach event listeners after creating the element\n    const toggleElement = liElement.querySelector('.toggle');\n    if (toggleElement) {\n        toggleElement.addEventListener('change', () => signal('TOGGLE', item.id)());\n        console.log('[EVENT_LISTENER] Attached change listener to toggle element');\n    }\n    else {\n        console.warn('[EVENT_LISTENER] Toggle element not found');\n    }\n    const labelElement = liElement.querySelector('label');\n    if (labelElement) {\n        labelElement.addEventListener('dblclick', () => signal('EDIT', item.id)());\n        console.log('[EVENT_LISTENER] Attached dblclick listener to label element');\n    }\n    else {\n        console.warn('[EVENT_LISTENER] Label element not found');\n    }\n    const destroyButton = liElement.querySelector('.destroy');\n    if (destroyButton) {\n        destroyButton.addEventListener('click', () => signal('DELETE', item.id)());\n        console.log('[EVENT_LISTENER] Attached click listener to destroy button');\n    }\n    else {\n        console.warn('[EVENT_LISTENER] Destroy button not found');\n    }\n    console.log('[RENDER_ITEM] Created li element:', liElement);\n    return liElement;\n}\n/**\n * `render_main` renders the `<section class=\"main\">` of the Todo List App\n * which contains all the \"main\" controls and the `<ul>` with the todo items.\n * @param {Model} model - the App's (current) model (or \"state\").\n * @param {(action: string, data?: any) => () => void} signal - the Elm Architecture \"dispatcher\" which will run\n * @return {HTMLElement} <section> DOM Tree which containing the todo list <ul>, etc.\n */\nfunction render_main(model, signal) {\n    const display = `style=display:${model.todos.length > 0 ? \"block\" : \"none\"}`;\n    return (0, elmish_1.section)([\"class=main\", \"id=main\", display], [\n        (0, elmish_1.input)([\n            \"id=toggle-all\",\n            \"type=checkbox\",\n            `onclick=${signal('TOGGLE_ALL').toString()}`,\n            model.all_done ? \"checked=checked\" : \"\",\n            \"class=toggle-all\"\n        ], []),\n        (0, elmish_1.label)([\"for=toggle-all\"], [(0, elmish_1.text)(\"Mark all as complete\")]),\n        (0, elmish_1.ul)([\"class=todo-list\"], model.todos.length > 0\n            ? model.todos\n                .filter(item => {\n                switch (model.hash) {\n                    case '#/active':\n                        return !item.done;\n                    case '#/completed':\n                        return item.done;\n                    default:\n                        return true;\n                }\n            })\n                .map(item => render_item(item, model, signal))\n            : [])\n    ]);\n}\n/**\n * `render_footer` renders the `<footer class=\"footer\">` of the Todo List App\n * which contains count of items to (still) to be done and a `<ul>` \"menu\"\n * with links to filter which todo items appear in the list view.\n * @param {Model} model - the App's (current) model (or \"state\").\n * @param {Function} signal - the Elm Architecture \"dispatcher\" which will run\n * @return {HTMLElement} <section> DOM Tree which containing the <footer> element.\n * @example\n * // returns <footer> DOM element with other DOM elements nested:\n * var DOM = render_footer(model);\n */\nfunction render_footer(model, signal) {\n    const activeCount = model.todos.filter(i => !i.done).length;\n    const completedCount = model.todos.length - activeCount;\n    const display = model.todos.length > 0 ? \"block\" : \"none\";\n    const displayClear = completedCount > 0 ? \"block\" : \"none\";\n    const itemText = ` item${activeCount !== 1 ? 's' : ''} left`;\n    return (0, elmish_1.footer)([\"class=footer\", \"id=footer\", `style=display:${display}`], [\n        (0, elmish_1.span)([\"class=todo-count\", \"id=count\"], [\n            (0, elmish_1.strong)(activeCount.toString()),\n            (0, elmish_1.text)(itemText)\n        ]),\n        (0, elmish_1.ul)([\"class=filters\"], [\n            (0, elmish_1.li)([], [\n                (0, elmish_1.a)([\n                    \"href=#/\",\n                    \"id=all\",\n                    `class=${model.hash === '#/' ? \"selected\" : ''}`\n                ], [(0, elmish_1.text)(\"All\")])\n            ]),\n            (0, elmish_1.li)([], [\n                (0, elmish_1.a)([\n                    \"href=#/active\",\n                    \"id=active\",\n                    `class=${model.hash === '#/active' ? \"selected\" : ''}`\n                ], [(0, elmish_1.text)(\"Active\")])\n            ]),\n            (0, elmish_1.li)([], [\n                (0, elmish_1.a)([\n                    \"href=#/completed\",\n                    \"id=completed\",\n                    `class=${model.hash === '#/completed' ? \"selected\" : ''}`\n                ], [(0, elmish_1.text)(\"Completed\")])\n            ])\n        ]),\n        (0, elmish_1.button)([\n            \"class=clear-completed\",\n            `style=display:${displayClear}`,\n            signal('CLEAR_COMPLETED')\n        ], [\n            (0, elmish_1.text)(\"Clear completed [\"),\n            (0, elmish_1.span)([\"id=completed-count\"], [(0, elmish_1.text)(completedCount.toString())]),\n            (0, elmish_1.text)(\"]\")\n        ])\n    ]);\n}\n/**\n * `view` renders the entire Todo List App\n * which contains count of items to (still) to be done and a `<ul>` \"menu\"\n * with links to filter which todo items appear in the list view.\n * @param {Model} model - the App's (current) model (or \"state\").\n * @param {(action: string, data?: any) => () => void} signal - the Elm Architecture \"dispatcher\" which will run\n * @return {HTMLElement} <section> DOM Tree which containing all other DOM elements.\n * @example\n * // returns <section class=\"todo-app\"> DOM element with other DOM els nested:\n * var DOM = view(model, signal);\n */\nfunction view(model, signal) {\n    return (0, elmish_1.section)([\"class=todoapp\"], [\n        (0, elmish_1.header)([\"class=header\"], [\n            (0, elmish_1.h1)([], [(0, elmish_1.text)(\"todos\")]),\n            (0, elmish_1.input)([\n                \"id=new-todo\",\n                \"class=new-todo\",\n                \"placeholder=What needs to be done?\",\n                \"autofocus\"\n            ], [])\n        ]),\n        render_main(model, signal),\n        render_footer(model, signal)\n    ]);\n}\n/**\n * `subscriptions` let us \"listen\" for events such as \"key press\" or \"click\".\n * and respond according to a pre-defined update/action.\n * @param {Function} signal - the Elm Architecture \"dispatcher\" which will run\n * both the \"update\" and \"render\" functions when invoked with signal(action)\n */\nfunction subscriptions(signal) {\n    const ENTER_KEY = 13;\n    const ESCAPE_KEY = 27;\n    document.addEventListener('keyup', function handler(e) {\n        switch (e.keyCode) {\n            case ENTER_KEY:\n                const editing = document.getElementsByClassName('editing');\n                if (editing.length > 0) {\n                    signal('SAVE')();\n                }\n                const new_todo = document.getElementById('new-todo');\n                if (new_todo.value.length > 0) {\n                    signal('ADD')();\n                    new_todo.value = '';\n                    new_todo.focus();\n                }\n                break;\n            case ESCAPE_KEY:\n                signal('CANCEL')();\n                break;\n        }\n    });\n    window.onhashchange = function route() {\n        signal('ROUTE')();\n    };\n}\n"],"names":["empty","node","lastChild","removeChild","mount","model","update","view","root_element_id","subscriptions","console","log","ROOT","document","getElementById","error","Error","store_name","saveModelToLocalStorage","mod","serializedModel","JSON","stringify","localStorage","setItem","e","render","sig","root","callback","viewResult","appendChild","setTimeout","currentModel","signal","action","data","updatedModel","storedModel","warn","getItem","parsedModel","parse","getModelFromLocalStorage","innerHTML","add_attributes","attrlist","tagName","Array","isArray","isValidAttributeName","name","trimmedName","trim","toLowerCase","validNameRegex","isValid","test","parsedAttributes","map","attr","key","value","trimmedAttr","equalIndex","indexOf","slice","includes","filter","forEach","index","_a","_b","length","startsWith","eventName","handlerValue","eventHandler","event","functionBody","toString","replace","Function","addEventListener","setEventHandler","attributeValue","trimmedKey","trimmedValue","String","setAttribute","removeAttribute","className","style","cssText","DOMException","message","safeSetAttribute","append_childnodes","childnodes","parent","el","create_element","type","finalElement","createElement","section","a","button","div","footer","header","h1","input","label","li","span","strong","text_str","text","createTextNode","ul","route","title","hash","window","location","new_state","Object","defineProperty","exports","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","initial_model","new_model","last","todos","id","push","done","item","assign","all_done","every","clicked","Date","now","click_time","editing","edit","getElementsByClassName","editId","parseInt","elmish_1","render_main","render_footer","keyCode","new_todo","focus","onhashchange","render_item","filterAttributes","attrs","filtered","valueParts","split","join","isValidKey","isValidValue","liAttributes","Boolean","inputAttributes","createElementWithLogging","elementType","attributes","children","element","liElement","toggleElement","querySelector","labelElement","destroyButton","display","activeCount","i","completedCount","displayClear","itemText","enumerable","get"],"sourceRoot":""}