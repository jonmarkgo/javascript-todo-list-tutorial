{
  "name": "javascript-todo-list-tutorial",
  "description": "Learn how to build a Todo List in JavaScript following Test Driven Development TDD!",
  "version": "1.0.5",
  "type": "module",
  "homepage": "https://github.com/dwyl/todomvc-vanilla-javascript-elm-architecture-example",
  "main": "index.html",
  "repository": {
    "type": "git",
    "url": "https://github.com/dwyl/todomvc-vanilla-javascript-elm-architecture-example.git"
  },
  "author": "@dwyl & friends!",
  "devDependencies": {
    "@types/jsdom": "^21.1.7",
    "@types/jsdom-global": "^3.0.7",
    "@types/node": "^22.7.5",
    "@types/tape": "^5.6.4",
    "decache": "^4.6.0",
    "jsdom": "^25.0.1",
    "jsdom-global": "^3.0.2",
    "live-server": "^1.1.0",
    "nyc": "^17.0.0",
    "pre-commit": "^1.2.2",
    "tap-nyc": "^1.0.3",
    "tape": "^5.0.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2",
    "ts-node-dev": "^2.0.0"
  },
  "scripts": {
    "check-coverage": "nyc check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "test": "NODE_DEBUG=test node --loader ts-node/esm test/run-tests.ts | tap-nyc",
    "retest": "PORT=8000 node_modules/.bin/nodemon --exec ts-node ./test/*.ts",
    "start": "node dist/lib/server.js",
    "dev": "ts-node-dev --respawn --transpile-only lib/server.ts",
    "build": "tsc"
  },
  "keywords": [
    "Todo List",
    "TodoMVC",
    "functional",
    "fast",
    "learn",
    "beginner",
    "tutorial",
    "how to",
    "Elm",
    "architecture"
  ],
  "license": "ISC",
  "pre-commit": [
    "test",
    "check-coverage"
  ],
  "ts-node": {
    "experimentalSpecifierResolution": "node",
    "esm": true,
    "experimentalResolver": true
  }
}
